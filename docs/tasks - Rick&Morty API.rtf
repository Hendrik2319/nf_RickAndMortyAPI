{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red252\green49\blue17;\red0\green0\blue0;
\red66\green1\blue120;\red0\green0\blue233;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\cssrgb\c100000\c29020\c6667;\cssrgb\c0\c0\c0;
\cssrgb\c33333\c10196\c54510;\cssrgb\c0\c0\c93333;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}}
\paperw11900\paperh16840\margl1440\margr1440\vieww14340\viewh13880\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
Recherche\
\pard\pardeftab720\sa320\partightenfactor0

\f1\b0\fs32 \cf0 \cb2 Recherchiert und diskutiert gemeinsam, um die folgenden Fragen zu beantworten.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Welche Vorteile gibt es, wenn man die Zugriffe auf externe APIs aus dem Backend und nicht aus dem Frontend macht?\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
Kontrolle und Sicherheit\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Welche Herausforderungen seht Ihr beim Testen Eurer Anwendung, wenn sie mit dem WebClient externe APIs nutzt?\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
API k\'f6nnten verschoben oder ge\'e4ndert sein.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa320\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Designe eine Klassen-Struktur um die Response der {\field{\*\fldinst{HYPERLINK "https://dummyjson.com/products"}}{\fldrslt \cf5 \ul \ulc5 Product-Api}} mit allen Eigenschaften abzubilden.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
Record ProductRepo( List<Product> products ) und das Record Product( int id; String title; String description; int price; double discountPercentage; double rating; int stock; String brand; String category; String thumbnail; List<String> images )\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa320\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 Aufgabe: WebClient\
\pard\pardeftab720\sa320\partightenfactor0

\f1\b0\fs32 \cf0 \cb2 Erstellt euch ein neues Projekt und nutzt die Daten aus der Rick&Morty API\
https://rickandmortyapi.com\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Schritt 1: Schreibe einen Endpunkt, der alle Rick&Morty-Character zur\'fcckgibt (aber reduzierte Charakter-Details).\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Wenn ihr im Postman GET http://localhost:8080/api/characters/ eingebt sollen alle Charaktere in diesem Beispielformat ausgegeben werden:\
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 [\
  \{"id": 1, "name": "Rick Sanchez", "species": "Human"\},\
  \{"id": 2, "name": "Morty Smith", "species": "Human"\},\
  ... weitere\
]\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Schritt 2: Schreibe einen Endpunkt, der einen Rick&Morty-Character zur\'fcckgibt. Wenn ihr im Postman GET http://localhost:8080/api/characters/2 eingebt, soll der Character mit der Id 2 zur\'fcckgegeben werden.\
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf0 ``\{"id": 2, "name": "Rick Sanchez", "species": "Human"\}\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Schritt 3: Schreibe einen Endpunkt, der eine gefilterte Liste von Rick&Morty-Character zur\'fcckgibt.(Es soll nach dem Status gefiltert werden). Wenn ihr im Postman GET http://localhost:8080/api/characters?status=alive eingebt, soll eine Liste von lebenden Charakteren zur\'fcckgeben werden.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Schritt 4: Schreibe einen Endpunkt f\'fcr eine Spezies-Statistik. Wenn ihr im Postman GET http://localhost:8080/api/species-statistic?species=Human eingebt, soll die Anzahl der lebenden "Human"-Charaktere als Zahl (kein JSON) ausgegeben werden. Gleiches soll auch f\'fcr alle anderen Spezies funktionieren.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Falls ihr diese Aufgabe bereits fr\'fcher abgeschlossen habt, d\'fcrft ihr die Bonusaufgabe auf der n\'e4chsten Seite bearbeiten.\
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\sa320\partightenfactor0
\cf0 Wie viele lebende Menschen gibt es?\
Enter answer here\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 Bonus-Aufgabe\
\pard\pardeftab720\sa320\partightenfactor0

\f1\b0\fs32 \cf0 \cb2 Super, Ihr seid gut vorangekommen! Bearbeitet jetzt diese freiwillige Bonusaufgabe, um Euer Verst\'e4ndnis zu vertiefen.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Binde die Book-API von https://my-json-server.typicode.com/Flooooooooooorian/BookApi/books in eurer Projekt BookLibrary ein.\
\ls5\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Zum Beispiel 
\f2\fs26 GET https://my-json-server.typicode.com/Flooooooooooorian/BookApi/books/978-3-8362-8745-6
\f1\fs32 .\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 Bonus Aufgabe Github Api
\f1\b0\fs32 \cf0 \cb2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Stelle einen 
\f2\fs26 /api/github/<username>
\f1\fs32  Endpunkt zuverf\'fcgung, der mittels der Github Api das Profil des jeweiligen Nutzers abruft.\
\ls6\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Sei kreativ und erg\'e4nze deinen Server um weitere Endpunkte, die weitere Informationen von der Github API abrufen.\cb1 \
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
}